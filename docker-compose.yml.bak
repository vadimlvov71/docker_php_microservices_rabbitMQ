version: '3'
# Список наших сервисов (контейнеров)
services:
    nginx:
        container_name: nginx_rabbitmq
        image: nginx:latest
        # mapping ports
        ports:
            - "85:80"
            - "86:82"
        # mapping directories
        volumes:
            - ./nginx:/etc/nginx/conf.d
            - ./www:/var/www
            - ./logs:/var/log/nginx
        depends_on:
          - php_sender
        restart: always

    php_sender:
        container_name: php_rabbitmq_sender
        # directory for php dockerfile
        build: ./php_instances/php_sender
        
        depends_on:
          - elastic_search
        volumes:
            - ./www/sender:/var/www/sender
        restart: always
    
    php_receiver:
        container_name: php_rabbitmq_receiver
        build:
          context: .
          dockerfile: php_instances/php_receiver/Dockerfile
        command: "php index.php"
        volumes:
          - ./www/src:/var/www/src
        depends_on:
          rabbitmq:
            condition: service_healthy
        restart: always
      
    python:
        container_name: python
        build:
          context: .
          dockerfile: python/Dockerfile
        depends_on:
          - rabbitmq
          - elastic_search
        tty: true
        ports:
          - 8000:8000
        #command: 'python index.py runserver 0.0.0.0:8000'
        volumes:
          - ./www/python:/var/www/python
        restart: always
        
    rabbitmq:
      container_name: rabbitmq
      build:
        context: .
        dockerfile: rabbitmq/Dockerfile
      ports:
        - "15672:15672"
        - "5672:5672"
      restart: always
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:15672"]
        interval: 30s
        timeout: 10s
        retries: 5

    #ElasticSearch
    elastic_search:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.11.3
        container_name: elastic_search
        environment:
          - node.name=elasticsearch
          - discovery.type=single-node
        ulimits:
            memlock:
                soft: -1
                hard: -1
        ports:
            - "9200:9200"
            - "9300:9300"
        #networks:
        #  - elastic-network
        volumes:
          - ./elastic_search/:/usr/share/elasticsearch/data/
        restart: always

    kibana:
        image: docker.elastic.co/kibana/kibana:8.11.3
        container_name: kibana
        environment: 
          #- ELASTICSEARCH_URL:http://elasticsearch
          ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
          #ELASTICSEARCH_USERNAME: elastic
          #ELASTICSEARCH_PASSWORD: changeme
        ports:
            - "5601:5601"
        depends_on:
            - elastic_search
        networks:
          - elastic-network
        restart: always
networks:
  elastic-network:
         
